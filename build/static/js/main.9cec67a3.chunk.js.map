{"version":3,"sources":["js/components/Loader.js","js/components/Dashboard.js","js/components/Intro.js","js/components/Navigation.js","js/components/Pod.js","js/util/getAverage.js","js/util/getDimensions.js","js/charts/reveal.js","js/charts/makeYGridlines.js","js/charts/tooltip.js","js/charts/LineChart.js","js/util/getPositivityRate.js","js/charts/BarChart.js","js/charts/CountySection.js","js/charts/ZipMap.js","js/charts/ZipTable.js","js/util/parseDate.js","js/util/formatJson.js","js/util/makeId.js","js/util/getWeekAverage.js","js/util/getNth.js","js/App.js","index.js"],"names":["Loader","className","Dashboard","props","num","data","cases","hospitalizations","vaccinations","delawarePop","getTail","arr","n","length","id","delaware_cases","toLocaleString","toFixed","date_confirmed","getMonth","getDate","delaware_deaths","vaccinated","Number","delaware_hospitalized","getFullYear","Intro","pList","document","querySelector","querySelectorAll","pComponents","Array","from","map","p","i","textContent","href","Navigation","NavigationComponents","d","toLowerCase","replace","Pod","heading","chatter","toggle","children","defaultToggle","source","useState","filter","setFilter","charts","c","t","onClick","handleClick","title","dangerouslySetInnerHTML","__html","require","getAverage","nums","reduce","a","b","getDimensions","width","dimensions","height","margin","top","right","bottom","left","boundedWidth","boundedHeight","reveal","el","attr","transition","duration","makeYGridlines","bounds","yScale","append","call","axisLeft","ticks","tickSize","tickFormat","variableDisplayNames","months","tooltip","chartGroup","yAccessor","xScale","yAccessorArr","tooltipLine","style","focus","selectAll","enter","select","on","event","bisect","bisector","xPos","pointer","x0","invert","d0","tooltipContent","forEach","y","shift","pageX","window","innerWidth","html","pageY","LineChart","state","createChart","bind","this","setState","container","offsetWidth","offsetHeight","JSON","parse","stringify","class","xd","Date","setDate","date","weekAgo","past_week","slice","rate","location","weekOfData","Math","max","testChangesArr","caseChangesArr","testChange","caseChange","push","getPositivityRate","xAccessor","maxes","timeDays","node","scaleTime","range","domain","extent","scaleLinear","addLine","f","clipId","ease","easeLinear","noArea","datum","area","x","y0","y1","line","xAxisGenerator","axisBottom","timeFormat","scale","yAxisGenerator","format","ref","label","legend","Object","getOwnPropertyNames","values","Component","BarChart","change","numberOfDays","average","barWidth","v","path","totalLength","getTotalLength","CountySection","county_pops","newcastle","kent","sussex","keys","county","getLatest","property","l","rowletructor","countyFull","ZipMap","method","metric","handleHover","e","target","dataset","raise","pathData","object","zip","casesPer10k","deaths","deathsPer10k","getColor","zips","cities","subset","geojson","topojson","topology","objects","delaware_zip_polygon","projection","geoMercator","fitSize","pathGenerator","geoPath","features","fillData","properties","zip_code","colors","scaleQuantize","min","value","fill","data-object","city","coordinates","cx","cy","r","data-metric","data-method","backgroundColor","invertExtent","zipCities","ZipTable","undefined","showAll","setShowAll","clicked","setClicked","useEffect","z","type","placeholder","onChange","handler","onInput","String","includes","parseDate","input","parts","match","fmt","part","formatJson","obj","prop","hasOwnProperty","isNaN","makeid","result","characters","charactersLength","charAt","floor","random","getWeekAverage","changesArr","split","getNth","App","setData","React","setDimensions","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","console","log","addEventListener","removeEventListener","Promise","all","d3","then","files","sort","getTime","zipData","catch","err","square","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9cec67a3.chunk.js","sourcesContent":["require('../../scss/components/Loader.scss')\n\nexport default function Loader() {\n  return(\n    <div className='loader-wrapper'>\n      <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n    </div>\n  )\n}\n","require('../../scss/components/Dashboard.scss')\n\nexport default function Dashboard(props) {\n\n  const {cases, hospitalizations, vaccinations} = props.data\n\n  const delawarePop = 973764;\n\n  const getTail = (arr, n) => arr[arr.length - n]\n  const addPrefix = (num) => {\n    if (num >= 0) {\n      return '+' + num.toLocaleString()\n    } else {\n      return num.toLocaleString()\n    }\n  }\n  return(\n    <div id='g-dashboard'>\n      <div className=\"g-dashboard-pod-container\">\n\n        <div className=\"g-dashboard-pod\">\n          <div className=\"g-dashboard-pod-section cases\">\n            <div className=\"g-big-number\">{getTail(cases, 1).delaware_cases.toLocaleString()}</div>\n            <div className=\"g-big-number-label\">confirmed cases</div>\n            <div className=\"g-big-number-label rate\"><b>{(getTail(cases, 1).delaware_cases / delawarePop * 10000).toFixed(0).toLocaleString()}</b> per 10k people</div>\n            <div className=\"g-big-number-label secondary\"><strong>+{getTail(cases, 1).delaware_cases - getTail(cases, 2).delaware_cases}</strong> since {getTail(cases, 2).date_confirmed.getMonth() + 1}/{getTail(cases, 2).date_confirmed.getDate()} update</div>\n          </div>\n        </div>\n\n        <div className=\"g-dashboard-pod\">\n          <div className=\"g-dashboard-pod-section deaths\">\n            <div className=\"g-big-number\">{getTail(cases, 1).delaware_deaths.toLocaleString()}</div>\n            <div className=\"g-big-number-label\">confirmed deaths</div>\n            <div className=\"g-big-number-label rate\"><b>{(getTail(cases, 1).delaware_deaths / delawarePop * 10000).toFixed(0).toLocaleString()}</b> per 10k people</div>\n            <div className=\"g-big-number-label secondary\"><strong>+{getTail(cases, 1).delaware_deaths - getTail(cases, 2).delaware_deaths}</strong> since {getTail(cases, 2).date_confirmed.getMonth() + 1}/{getTail(cases, 2).date_confirmed.getDate()} update</div>\n          </div>\n        </div>\n\n        <div className=\"g-dashboard-pod\">\n          <div className=\"g-dashboard-pod-section vaccinations\">\n            <div className=\"g-big-number\">{getTail(vaccinations, 1).vaccinated.toLocaleString()}</div>\n            <div className=\"g-big-number-label\">people fully vaccinated</div>\n            <div className=\"g-big-number-label rate\"><b>{Number((getTail(vaccinations, 1).vaccinated / delawarePop * 10000).toFixed(0)).toLocaleString()}</b> per 10k people</div>\n            <div className=\"g-big-number-label secondary\"><strong>+{(getTail(vaccinations, 1).vaccinated - getTail(vaccinations, 2).vaccinated).toLocaleString()}  </strong> since {getTail(vaccinations, 2).date_confirmed.getMonth() + 1}/{getTail(vaccinations, 2).date_confirmed.getDate()} update</div>\n          </div>\n        </div>\n\n        <div className=\"g-dashboard-pod\">\n          <div className=\"g-dashboard-pod-section hospitalized\">\n            <div className=\"g-big-number\">{getTail(hospitalizations, 1).delaware_hospitalized.toLocaleString()}</div>\n            <div className=\"g-big-number-label\">Hospitalized</div>\n            <div className=\"g-big-number-label secondary\"><strong>{ addPrefix((getTail(hospitalizations, 1).delaware_hospitalized - getTail(hospitalizations, 2).delaware_hospitalized).toLocaleString())}  </strong> since {getTail(hospitalizations, 2).date_confirmed.getMonth() + 1}/{getTail(hospitalizations, 2).date_confirmed.getDate()} update</div>\n          </div>\n        </div>\n\n      </div>\n\n      <div className='datestamp'>SOURCE: Delaware Division of Public Health. Data are current as of 6pm the previous day. Last update:&nbsp;{getTail(cases, 1).date_confirmed.getMonth() + 1}/{getTail(cases, 1).date_confirmed.getDate()}/{getTail(cases, 1).date_confirmed.getFullYear()}</div>\n    </div>\n  )\n\n\n}\n","export default function Intro() {\n\n  let pList = document.querySelector('.article-inner') && document.querySelector('.article-inner').querySelectorAll('p:not(.g-intro-p)')\n  let pComponents = pList && Array.from(pList).map((p, i) => <p key={'p-'+i} className='g-intro-p'>{p.textContent}</p>)\n\n  return(\n    <>\n      <p className='g-intro-p'><em>We are providing this content free as a public service to readers during the coronavirus outbreak. Please support the work we're doing by <a href='https://cm.delawareonline.com/specialoffer'>subscribing to Delaware Online</a>.</em></p>\n      {pComponents || ''}\n    </>\n  )\n}\n","import React from 'react'\nrequire('../../scss/components/Navigation.scss')\n\nexport default function Navigation() {\n\n  const sections = ['Cases and deaths', 'Hospitalizations', 'Vaccinations', 'County data', 'ZIP code data']\n  const NavigationComponents = sections.map(d => <a href={`#g-pod-anchor-${d.toLowerCase().replace(/ /g, '-')}`}>{d}</a>)\n\n  return(\n    <div className='g-navigation'>\n      <h4>Jump to a section</h4>\n      {NavigationComponents}\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nrequire('../../scss/Pod.scss')\n\nexport default function Pod({id, heading, chatter, toggle, children, defaultToggle, source}) {\n\n  const [filter, setFilter] = useState(defaultToggle)\n\n  const handleClick = filter => setFilter(filter)\n\n  let charts = toggle ? children.filter(c => c.props.filter === filter) : children\n\n  return(\n    <div id={`g-pod-${id}`} key={`g-pod-${id}`} className=\"g-main-container__pod\">\n    <a id={`g-pod-anchor-${id}`} className='offset-anchor'/>\n    <h3 className='g-pod-heading'>{heading}</h3>\n    {toggle ? <div className='g-pod-toggle'>{toggle.map(t => <button className={t.filter === filter ? 'active' : ''} onClick={() => handleClick(t.filter)}>{t.title}</button>)}</div> : ''}\n    {chatter ? <div className='g-pod-chatter' dangerouslySetInnerHTML={{__html: chatter}} /> : ''}\n      {charts}\n    {source ? <div className='g-source' dangerouslySetInnerHTML={{__html: `SOURCE: ${source}`}}></div> : ''}\n    </div>\n  )\n}\n","export default function getAverage(nums) {\n    return nums.reduce((a, b) => (a + b)) / nums.length;\n}\n","export default function getDimensions(width) {\n  let dimensions = {\n    width: width,\n    height: 350,\n    margin: {\n      top: 10,\n      right: 20,\n      bottom: 50,\n      left: 50,\n    },\n  }\n  dimensions.boundedWidth = dimensions.width -\n    dimensions.margin.left -\n    dimensions.margin.right\n  dimensions.boundedHeight = dimensions.height -\n    dimensions.margin.top -\n    dimensions.margin.bottom\n\n  return dimensions\n}\n","import { select } from 'd3-selection'\nlet transitionDuration = 800\n\nconst reveal = el => {\n  el\n    .attr('opacity', 0)\n    .transition()\n    .duration(transitionDuration)\n    .attr('opacity', 1)\n}\n\nexport default reveal\n","import { axisLeft } from 'd3-axis'\nimport reveal from './reveal.js'\n\nconst makeYGridlines = (bounds, yScale, dimensions) => {\n  bounds.append(\"g\")\n    .call(axisLeft(yScale).ticks(4)\n      .tickSize(-dimensions.boundedWidth)\n      .tickFormat(\"\")\n    )\n    .attr(\"class\", \"gridlines\")\n    .call(el => reveal(el))\n}\n\nexport default makeYGridlines\n","import {\n  bisector\n} from 'd3-array'\nimport {\n  select,\n  pointer\n} from 'd3-selection'\n\nconst variableDisplayNames = require('../../data/variableDisplayNames.json')\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n\nexport default function tooltip(bounds, chartGroup, data, yAccessor, dimensions, xScale, yScale) {\n\n  const yAccessorArr = typeof yAccessor === 'string' ? [yAccessor] : yAccessor\n\n  const tooltipLine = chartGroup.append('line').style('display', 'none');\n\n  // const focus = chartGroup\n  //   .append('g')\n  //   .attr('class', 'focus')\n  //   .style('display', 'none');\n\n  // focus\n  //   .append('circle')\n  //   .attr('r', 4)\n  //   .attr('class', 'circle')\n  //   .attr('stroke-width', 2)\n  //   .attr('stroke', 'white')\n\n\n    const focus = chartGroup\n      .append('g')\n      .attr('class', 'focus')\n      .style('display', 'none');\n\n      focus\n        .selectAll('.circle')\n        .data(yAccessorArr)\n        .enter()\n        .append('circle')\n        .attr('r', 4)\n        .attr('class', d => 'circle ' + d)\n        .attr('stroke-width', 2)\n        .attr('stroke', 'white')\n\n\n  const tooltip = select(\"body\")\n    .append('div')\n    .attr('class', 'g-tooltip')\n    .style('display', 'none');\n\n  chartGroup\n    .append('rect')\n    .attr('class', 'overlay')\n    .attr('width', dimensions.boundedWidth)\n    .attr('height', dimensions.boundedHeight)\n    .style('opacity', 0)\n    .on(\"mouseover\", function() {\n      focus.style(\"display\", null)\n      tooltip.style(\"display\", null)\n      tooltipLine.style(\"display\", null)\n    })\n    .on(\"mouseout\", function() {\n      focus.style(\"display\", \"none\")\n      tooltip.style(\"display\", \"none\")\n      tooltipLine.style(\"display\", \"none\")\n    })\n    .on('mousemove', mousemove);\n\n\n\n  function mousemove(event) {\n    const bisect = bisector(d => d.date_confirmed).left;\n    const xPos = pointer(event)[0];\n\n    const x0 = bisect(data, xScale.invert(xPos));\n    const d0 = data[x0];\n\n    let tooltipContent = ''\n    tooltipContent += `<h4>${months[d0.date_confirmed.getMonth()]}. ${d0.date_confirmed.getDate()}</h4>`\n\n\n    yAccessorArr.forEach((y, i) => {\n\n      if (d0[y]) {\n        focus.style(\"display\", null)\n        tooltip.style(\"display\", null)\n        tooltipLine.style(\"display\", null)\n      } else {\n        focus.style(\"display\", \"none\")\n        tooltip.style(\"display\", \"none\")\n        tooltipLine.style(\"display\", \"none\")\n      }\n\n      focus.style(\"display\", null)\n\n      focus\n      .selectAll('.circle')\n      .filter(function (d, i) { return d === y})\n      .attr(\n        'transform',\n        `translate(${xScale(d0.date_confirmed)},${yScale(d0[y])})`,\n      );\n\n      // make tooltip content\n      tooltipContent += `<div>${variableDisplayNames[y]}: <strong>${d0[y] ? Number(d0[y].toFixed(0)).toLocaleString() : 0}${y === 'delaware_positivityRate' ? '%' : ''}</strong></div>`\n    })\n\n\n\n    tooltipLine.attr('stroke', '#ddd')\n      .attr('x1', xScale(d0.date_confirmed))\n      .attr('x2', xScale(d0.date_confirmed))\n      .attr('y1', 0)\n      .attr('y2', dimensions.boundedHeight);\n\n    let shift = event.pageX < window.innerWidth / 2 ? 20 : 120\n\n    tooltip\n        .html(tooltipContent)\n        .style(\"left\", (event.pageX - shift) + \"px\")\n        .style(\"top\", (event.pageY - ((yAccessorArr.length + 1) * 20)) + \"px\");\n\n\n\n\n  }\n\n\n}\n","import React, {\n  Component\n} from 'react'\n\nimport { scaleLinear, scaleTime } from 'd3-scale'\nimport { max, extent } from 'd3-array'\nimport { select } from 'd3-selection'\nimport { timeFormat } from 'd3-time-format'\nimport { timeDays, timeMonth } from 'd3-time'\nimport { line, area } from 'd3-shape'\nimport {axisBottom, axisLeft } from 'd3-axis'\nimport {easeLinear} from 'd3-ease'\nimport {format} from 'd3-format'\n\nimport getPositivityRate from '../util/getPositivityRate.js'\nimport getDimensions from '../util/getDimensions.js'\nimport makeYGridlines from './makeYGridlines.js'\nimport reveal from './reveal.js'\nimport tooltip from './tooltip.js'\n\nrequire('../../scss/charts.scss')\n\nclass LineChart extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n        dimensions: null,\n      };\n\n    this.createChart = this.createChart.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({\n      dimensions: {\n        width: this.container.offsetWidth,\n        height: this.container.offsetHeight,\n      },\n    });\n\n    this.state.dimensions && this.createChart()\n  }\n\n  componentDidUpdate() {\n    this.createChart()\n  }\n\n  createChart() {\n\n    let { data } = this.props\n    data = JSON.parse(JSON.stringify(data))\n    data.map(d => {\n      // TEMPORARY VACCINE DATE FIX\n      if (this.props.class === 'vaccinations') {\n        let xd = new Date(d.date_confirmed)\n        xd.setDate(xd.getDate()-1);\n        d.date_confirmed = xd\n      } else {\n        d.date_confirmed = new Date(d.date_confirmed)\n      }\n    })\n\n    // testing chart exception\n    if (this.props.class === 'testing') {\n      data.map((d, i) => {\n        let date = d.date_confirmed\n        let weekAgo = new Date(date.getDate() - 7);\n        if (data[0].date_confirmed >= weekAgo) {\n          let past_week = data.slice(i - 7, i)\n          let rate = past_week.length && getPositivityRate(past_week, 'delaware')\n          d['delaware_positivityRate'] = past_week.length && rate\n        }\n      })\n\n    }\n\n    let xAccessor = d => d.date_confirmed\n    const yAccessorArr = typeof this.props.yAccessor === 'string' ? [this.props.yAccessor] : this.props.yAccessor\n    let maxes = []\n    yAccessorArr.forEach(a => maxes.push(max(data, d => d[a])))\n\n    const yAccessor = d => d[yAccessorArr[0]]\n    let dateRange = timeDays(xAccessor(data[0]), new Date())\n\n    let dimensions = getDimensions(this.container.offsetWidth)\n\n    let node = this.node\n    select(node).html('')\n    let bounds = select(node)\n      .append(\"g\")\n      .style(\"transform\", `translate(${\n                dimensions.margin.left\n              }px, ${\n                dimensions.margin.top\n              }px)`)\n\n    let transitionDuration = 800\n\n    let xScale = scaleTime()\n      .range([0, dimensions.boundedWidth])\n      .domain(extent(data, xAccessor));\n\n    let yScale = scaleLinear()\n      .range([dimensions.boundedHeight, 0])\n      .domain([0, max(maxes) * 1.1]);\n\n    makeYGridlines(bounds, yScale, dimensions)\n\n    var chartGroup = bounds\n      .append('g')\n      .attr('class', 'chartGroup ' + this.props.class)\n\n\n    const addLine = (f) => {\n\n      let clipId = `rectClip-${f}-${this.props.class}`\n\n      chartGroup.append(\"clipPath\")\n        .attr(\"id\", clipId)\n        .append(\"rect\")\n        .attr(\"width\", 0)\n        .attr(\"height\", dimensions.boundedHeight)\n        .transition()\n        .duration(transitionDuration)\n        .ease(easeLinear)\n        .attr(\"width\", dimensions.boundedWidth)\n\n      if (!this.props.noArea) {\n        chartGroup.append(\"path\")\n          .datum(data.filter(function(d) {\n            return d[f]\n          }))\n          .attr('class', 'area')\n          .attr(\"d\", area()\n            .x(function(d) {\n              return xScale(xAccessor(d))\n            })\n            .y0(yScale(0))\n            .y1(function(d) {\n              return yScale(d[f])\n            })\n          )\n          .attr(\"clip-path\", `url(#${clipId})`)\n      }\n\n\n      var path = chartGroup.append(\"path\")\n        .datum(data.filter(function(d) {\n          return d[f]\n        }))\n        .attr('class', 'line ' + f)\n        .attr(\"fill\", \"none\")\n        .attr(\"d\", line()\n          .x(function(d) {\n            return xScale(xAccessor(d))\n          })\n          .y(function(d) {\n            return yScale(d[f])\n          })\n        )\n        .attr(\"clip-path\", `url(#${clipId})`)\n\n      path\n        .attr(\"clip-path\", `url(#${clipId})`);\n\n\n\n    }\n\n    if (typeof this.props.yAccessor === 'string') {\n      addLine(this.props.yAccessor)\n    } else {\n      this.props.yAccessor.forEach(f => addLine(f))\n    }\n\n    let xAxisGenerator = axisBottom()\n      .tickFormat(this.props.class === 'vaccinations' ? timeFormat('%b. %d') : timeFormat('%b.'))\n      .scale(xScale)\n      .tickSize(0);\n\n    let xAxis = bounds.append(\"g\")\n      .call(xAxisGenerator)\n      .style(\"transform\", `translateY(${dimensions.boundedHeight}px)`)\n      .attr(\"class\", \"x axis\")\n\n    let yAxisGenerator = axisLeft()\n      .scale(yScale)\n      .ticks(4, \"s\")\n      .tickFormat(d => this.props.class === 'testing' ? `${d}%` : format(\"~s\")(d))\n\n    let yAxis = bounds.append(\"g\")\n      .call(yAxisGenerator)\n      .attr(\"class\", \"y axis\")\n      .call(el => reveal(el))\n\n    tooltip(bounds, chartGroup, data, this.props.yAccessor, dimensions, xScale, yScale)\n\n  }\n    render() {\n      const { dimensions } = this.state;\n      return (\n        <div className='g-pod-chart' ref={el => (this.container = el)}>\n        <div className='g-pod-chart-label'>\n          <h4>{this.props.label ? this.props.label : this.props.class}</h4>\n          <div className='g-pod-chart-legend'>\n            {this.props.legend.map(d => <div className='g-pod-chart-legend-item'><div className={`g-pod-chart-legend-item-symbol ${Object.getOwnPropertyNames(d)[0]} ${Object.values(d)[0].replace(' ', '').toLowerCase()} ${this.props.class}`}></div>{Object.values(d)[0]}</div>)}\n          </div>\n        </div>\n        {dimensions && (\n          <svg\n            className='g-chart line'\n            ref={node => this.node = node}\n            width={dimensions.width}\n            height={350}>\n          </svg>\n        )}\n      </div>\n    )\n      }\n  }\n  export default LineChart\n","import getAverage from './getAverage.js'\nexport default function getPositivityRate(data, location) {\n  let weekOfData = data.slice(Math.max(data.length - 7, 0))\n\n  let testChangesArr = []\n  let caseChangesArr = []\n\n  weekOfData.map((d, i) => {\n    let y = i ? weekOfData[i - 1] : null\n    let testChange = y ? d[location + '_tests'] - y[location + '_tests'] : d[location + '_tests']\n    let caseChange = y ? d[location + '_positiveTests'] - y[location + '_positiveTests'] : d[location + '_positiveTests']\n    i && testChangesArr.push(testChange);\n    i && caseChangesArr.push(caseChange)\n  })\n\n  return getAverage(caseChangesArr) / getAverage(testChangesArr) * 100\n}\n","import React, {\n  Component\n} from 'react'\n\nimport { scaleLinear, scaleTime } from 'd3-scale'\nimport { max, extent } from 'd3-array'\nimport { select } from 'd3-selection'\nimport { timeFormat } from 'd3-time-format'\nimport { timeDays, timeMonth } from 'd3-time'\nimport { line } from 'd3-shape'\nimport {axisBottom, axisLeft } from 'd3-axis'\nimport {easeLinear} from 'd3-ease'\n\nimport getAverage from '../util/getAverage.js'\nimport getDimensions from '../util/getDimensions.js'\nimport makeYGridlines from './makeYGridlines.js'\nimport reveal from './reveal.js'\nimport tooltip from './tooltip.js'\n\nrequire('../../scss/charts.scss')\n\nclass BarChart extends Component {\n\n  constructor(props) {\n  super(props)\n  this.state = {\n    dimensions: null,\n  };\n\n  this.createChart = this.createChart.bind(this)\n}\n\ncomponentDidMount() {\n  this.setState({\n    dimensions: {\n      width: this.container.offsetWidth,\n      height: this.container.offsetHeight,\n    },\n  });\n\n  this.state.dimensions && this.createChart()\n}\n\ncomponentDidUpdate() {\n  this.createChart()\n}\n\ncreateChart() {\n\n  let { data } = this.props\n  data = JSON.parse(JSON.stringify(data))\n  data.map(d => d.date_confirmed = new Date(d.date_confirmed))\n\n  let xAccessor = d => d.date_confirmed\n  let yAccessor = typeof this.props.yAccessor === 'string' ? d => d[this.props.yAccessor] : d => d[this.props.yAccessor[0]]\n  let dateRange = timeDays(xAccessor(data[0]), new Date())\n\n  data.map((d, i) => {\n    let y = i ? data[i - 1] : null\n    let change = y ? yAccessor(d) - yAccessor(y) : yAccessor(d)\n    d['change'] = change\n\n\n    let date = d.date_confirmed\n    let weekAgo = new Date(date);\n    weekAgo.setDate( weekAgo.getDate() - 7 );\n    let numberOfDays;\n    if (data[0].date_confirmed <= weekAgo){\n      numberOfDays = 7\n    } else {\n      numberOfDays = (date - data[0].date_confirmed) / (60*60*24*1000)\n    }\n\n      let past_week = data.slice(i-numberOfDays, i)\n      let values = []\n      past_week.map(x => values.push(x.change))\n      if (values.length) {\n        let average = getAverage(values)\n        d['average'] = average\n      }\n\n  })\n\n\n  let dimensions = getDimensions(this.container.offsetWidth)\n\n  let node = this.node\n  select(node).html('')\n\n  let bounds = select(node).append(\"g\")\n    .style(\"transform\", `translate(${\n                dimensions.margin.left\n              }px, ${\n                dimensions.margin.top\n              }px)`)\n\n  let transitionDuration = 800\n\n  let xScale = scaleTime()\n    .range([0, dimensions.boundedWidth])\n    .domain(extent(data, xAccessor));\n\n  let yScale = scaleLinear()\n    .range([dimensions.boundedHeight, 0])\n    .domain([0, max(data, d => d.change) * 1.1]);\n\n\n  makeYGridlines(bounds, yScale, dimensions)\n\n\n    var chartGroup = bounds\n      .append('g')\n      .attr('class', 'chartGroup ' + this.props.class)\n\n    // Create bar and append data.close and x position set based on barWidth equidistant\n    var barWidth = dimensions.boundedWidth / data.length;\n\n    var bar = chartGroup\n    .selectAll('g.bar')\n        .data(data, d => d.change)\n        .enter()\n        .append('g')\n        .attr('transform', (d,i) => `translate(${(i * barWidth) + (barWidth/2)},0)`)\n\n    // Add rectangles to bar\n    bar.append('rect')\n      .attr('class', 'bar')\n      .attr('height', 0)\n      .attr('y', dimensions.boundedHeight)\n      .transition()\n      .duration(transitionDuration)\n      .attr('height', d => {let v = dimensions.boundedHeight - yScale(d.change); return v > 0 ? v : 0})\n      .attr('width', barWidth - 0.5)\n      .attr('y', function(d) {\n        if (d.change === 0) {\n          return 0\n        } else {\n          return yScale(d.change)\n        }\n      })\n\n    // Add the line\n    var path = chartGroup.append(\"path\")\n      .datum(data.filter(function(d) { return d.average; }))\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"d\", line()\n        .x(function(d, i) { return xScale(d.date_confirmed) })\n        .y(function(d) { return yScale(d.average) })\n      )\n      .attr('class','line')\n\n      var totalLength = path.node().getTotalLength();\n      path\n      .attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\n      .attr(\"stroke-dashoffset\", totalLength)\n      .transition()\n      .duration(transitionDuration)\n      .ease(easeLinear)\n      .attr(\"stroke-dashoffset\", 0)\n\n\n  let xAxisGenerator = axisBottom()\n    .tickFormat(this.props.class === 'vaccinations' ? timeFormat('%b. %d') : timeFormat('%b.'))\n    .scale(xScale)\n    .tickSize(0);\n\n  let xAxis = bounds.append(\"g\")\n    .call(xAxisGenerator)\n    .style(\"transform\", `translateY(${dimensions.boundedHeight}px)`)\n    .attr(\"class\", \"x axis\")\n\n  let yAxisGenerator = axisLeft()\n    .scale(yScale)\n    .ticks(4, \"s\")\n\n  let yAxis = bounds.append(\"g\")\n    .call(yAxisGenerator)\n    .attr(\"class\", \"y axis\")\n    .call(el => reveal(el))\n\n\n    tooltip(bounds, chartGroup, data, ['change', 'average'], dimensions, xScale, yScale)\n\n\n  }\n\n    render() {\n      const { dimensions } = this.state;\n\n      return (\n        <div className='g-pod-chart' ref={el => (this.container = el)}>\n        <div className='g-pod-chart-label'>\n          <h4>{this.props.label ? this.props.label : this.props.class}</h4>\n          <div className='g-pod-chart-legend'>\n            {this.props.legend.map(d => <div className='g-pod-chart-legend-item'><div className={`g-pod-chart-legend-item-symbol ${Object.getOwnPropertyNames(d)[0]} ${this.props.class}`}></div>{Object.values(d)[0]}</div>)}\n          </div>\n        </div>\n        {dimensions && (\n          <svg\n            key={`bar-${this.props.class}-${this.props.filter}`}\n            className='g-chart bar'\n            ref={node => this.node = node}\n            width={dimensions.width}\n            height={350}>\n          </svg>\n        )}\n        </div>\n      )\n      }\n  }\n\n  export default BarChart\n","import React, {useState} from 'react'\n\nimport LineChart from \"./LineChart.js\"\n\nrequire('../../scss/components/CountySection.scss')\n\nexport default function CountySection(props) {\n\n  let [filter, setFilter] = useState('total')\n\n  let handleClick = filter => setFilter(filter)\n\n  let county_pops = {\n    newcastle: 558753,\n    kent: 180786,\n    sussex: 234225\n  }\n\n  let { data } = props\n  data = JSON.parse(JSON.stringify(data))\n\n  data.map(d => {\n    d.date_confirmed = new Date(d.date_confirmed)\n    for (var county of Object.keys(county_pops)) {\n      ['cases', 'deaths'].forEach(a => d[county + '_' + a + '_per10k'] = d[county + '_' + a] / county_pops[county] * 10000)\n    }\n  })\n\n  let t = data[data.length - 1];\n  let y = data[data.length - 2];\n\n  let getLatest = (county, property, t, y) => {\n    let l = t[county + '_' + property] - y[county + '_' + property]\n    return l > 0 ? `+${l.toLocaleString()}` : 0\n  }\n\n  let rowletructor = countyFull => {\n    let county = countyFull.replace(' ', '').toLowerCase()\n\n    return (\n      <tr className='g-row'>\n        <td className='g-cell g-name'>{countyFull}</td>\n        <td className='g-cell g-cases'>{t[county + '_cases'].toLocaleString()}</td>\n        <td className='g-cell g-cases-per'>{t[county + '_cases_per10k'].toFixed(1).toLocaleString()}</td>\n        <td className='g-cell g-cases-latest'>{getLatest(county, 'cases', t, y)}</td>\n        <td className='g-cell g-deaths'>{t[county + '_deaths'].toLocaleString()}</td>\n        <td className='g-cell g-deaths-per'>{t[county + '_deaths_per10k'].toFixed(1).toLocaleString()}</td>\n        <td className='g-cell g-deaths-latest'>{getLatest(county, 'deatjs', t, y)}</td>\n      </tr>\n    )\n  }\n\n  return (\n    <>\n      <div className='g-pod-toggle'>\n        <button className={filter === 'total' ? 'active' : ''} onClick={() => handleClick('total')}>Total</button>\n        <button className={filter === 'rate' ? 'active' : ''} onClick={() => handleClick('rate')}>Per 10k people</button>\n      </div>\n\n      { //chek filter\n        (filter === 'total' )\n        ? (<>\n          <LineChart class='county_cases' noArea={true} label='Total cases' data={data} filter='total' yAccessor={['newcastle_cases', 'kent_cases', 'sussex_cases']} legend={[{line: 'New Castle'},{line: 'Kent'},{line: 'Sussex'}]}/>\n          <LineChart class='county_deaths' noArea={true} label='Total deaths' data={data} filter='total' yAccessor={['newcastle_deaths', 'kent_deaths', 'sussex_deaths']} legend={[{line: 'New Castle'},{line: 'Kent'},{line: 'Sussex'}]}/>\n          </>)\n        : (<>\n          <LineChart class='county_cases' noArea={true} label='Cases per 10k people' data={data} filter='total' yAccessor={['newcastle_cases_per10k', 'kent_cases_per10k', 'sussex_cases_per10k']} legend={[{line: 'New Castle'},{line: 'Kent'},{line: 'Sussex'}]}/>\n          <LineChart class='county_deaths' noArea={true} label='Deaths per 10k people' data={data} filter='total' yAccessor={['newcastle_deaths_per10k', 'kent_deaths_per10k', 'sussex_deaths_per10k']} legend={[{line: 'New Castle'},{line: 'Kent'},{line: 'Sussex'}]}/>\n          </>)\n      }\n      <div className='g-h-scroll-table-wrapper'>\n        <table>\n          <thead>\n            <tr className='g-row'>\n              <th className='g-cell g-name'></th>\n              <th className='g-cell g-cases'>Cases</th>\n              <th className='g-cell g-cases-per'>Per 10k</th>\n              <th className='g-cell g-cases-latest'>Latest</th>\n              <th className='g-cell g-deaths'>Deaths</th>\n              <th className='g-cell g-deaths-per'>Per 10k </th>\n              <th className='g-cell g-deaths-per'>Latest</th>\n            </tr>\n          </thead>\n          {rowletructor('New Castle')}\n          {rowletructor('Kent')}\n          {rowletructor('Sussex')}\n        </table>\n      </div>\n\n    </>\n  )\n}\n","import React, { Component } from 'react'\nimport { geoMercator, geoPath } from 'd3-geo'\nimport * as topojson from \"topojson-client\";\nimport topology from '../../data/delaware_zip_polygon.json'\nimport { min, max, extent } from 'd3-array'\nimport { scaleQuantize } from 'd3-scale'\nimport { select } from 'd3-selection'\nimport {format} from 'd3-format'\n\nrequire('../../scss/components/ZipMap.scss')\n\nclass ZipMap extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n        dimensions: null,\n        method: 'total',\n        metric: 'cases'\n      };\n\n      this.handleClick = this.handleClick.bind(this);\n      this.handleHover = this.handleHover.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      dimensions: {\n        width: this.container.offsetWidth,\n        height: this.container.offsetHeight,\n      },\n    });\n    this.handleHover()\n  }\n\n  componentDidUpdate() {\n    this.handleHover()\n  }\n\n  handleClick(e) {\n    e.target.dataset.metric && this.setState({metric: e.target.dataset.metric})\n    e.target.dataset.method && this.setState({method: e.target.dataset.method})\n  }\n\n  handleHover() {\n\n    let node = this.node\n    const tooltip = select(\"body\")\n      .append('div')\n      .attr('class', 'g-tooltip')\n      .style('display', 'none');\n\n    select(node)\n      .selectAll('path')\n      .on(\"mouseover\", function() {\n        select(this).raise()\n        tooltip.style(\"display\", null)\n      })\n      .on(\"mouseout\", function() {\n        tooltip.style(\"display\", \"none\")\n      })\n      .on('mousemove', mousemove);\n\n    function mousemove(event) {\n      let pathData = JSON.parse(event.target.dataset.object)\n      let tooltipContent = `\n      <h4>ZIP code ${pathData.zip}</h4>\n      <div>Cases: ${pathData.cases ? `<strong>${pathData.cases}</strong>` : '<em>No cases reported.</em>'}</div>\n      <div>Cases per 10k: ${pathData.casesPer10k ? `<strong>${pathData.casesPer10k}</strong>` : '<em>No cases reported.</em>'}</div>\n      <div>Deaths: ${pathData.deaths ? `<strong>${pathData.deaths}</strong>` : '<em>No deaths reported.</em>'}</div>\n      <div>Deaths per 10k: ${pathData.deathsPer10k ? `<strong>${pathData.deathsPer10k}</strong>` : '<em>No deaths reported.</em>'}</div>\n      `\n      let shift = event.pageX < window.innerWidth / 2 ? 20 : 120\n      tooltip\n        .html(tooltipContent)\n        .style(\"left\", (event.pageX - shift) + \"px\")\n        .style(\"top\", (event.pageY - 110) + \"px\");\n    }\n\n  }\n\n   render() {\n\n     let { data } = this.props\n     let getColor;\n     data = JSON.parse(JSON.stringify(data))\n     data.map(d => d.date_confirmed = new Date(d.date_confirmed))\n\n     const { dimensions } = this.state;\n\n     let zips, cities;\n     let mapHeight = 600\n     let subset = []\n\n     if (dimensions) {\n       var geojson = topojson.feature(topology, topology.objects.delaware_zip_polygon);\n        const projection = geoMercator()\n        .fitSize([dimensions.width, mapHeight], geojson)\n\n        const pathGenerator = geoPath().projection(projection)\n\n        let property = `${this.state.metric}${this.state.method === 'rate' ? `Per10k` : ``}`\n\n        geojson.features\n           .forEach((d,i) => {\n            let fillData = data.filter(v => v.zip == d.properties.zip_code)[0]\n            fillData && fillData[property] && subset.push(fillData[property])\n\n           }\n         )\n\n         const colors = this.state.metric === 'cases' ? ['#c6dbef','#9ecae1','#6baed6','#4292c6','#2171b5','#084594'] : [\"#b2bcd4\",\"#94a3c0\",\"#6e84af\",\"#566996\",\"#3e5181\",\"#263467\"]\n\n         getColor = scaleQuantize().domain([min(subset), max(subset)]).range(colors);\n\n\n\n        zips = geojson.features\n           .map((d,i) => {\n\n             let fillData = data.filter(v => v.zip == d.properties.zip_code)[0]\n             fillData && fillData[property] && subset.push(fillData[property])\n             let value = fillData && fillData[property] ? fillData[property] : 0\n\n            return(<path\n             key={'path' + i}\n             d={pathGenerator(d)}\n             className='g-polygon'\n             style={{fill: value ? getColor(value) : '#dddddd'}}\n             data-object={JSON.stringify(fillData)}\n             />)\n            }\n          )\n\n          let citiesArr = [{\n              city: 'Wilmington',\n              coordinates: [-75.55042814256949, 39.747833202175016]\n            },\n            {\n              city: 'Newark',\n              coordinates: [-75.7550818620012, 39.67831983969895]\n            },\n            {\n              city: 'Dover',\n              coordinates: [-75.5247506120598, 39.15958952260507]\n            }, {\n              city: 'Millsboro',\n              coordinates: [-75.29742753108563, 38.59048608966282]\n            }\n          ]\n\n          cities = citiesArr.map((d, i)=> {\n            return(\n              <g>\n                <circle\n                  key={'circle' + i}\n                  cx={projection(d.coordinates)[0]}\n                  cy={projection(d.coordinates)[1]}\n                  r='5px'\n                  className='g-city-marker'\n                  />\n                <text\n                  key={'text' + i}\n                  x={projection(d.coordinates)[0] + 10}\n                  y={projection(d.coordinates)[1]}\n                  className='g-city-label halo'\n                  >{d.city}\n                </text>\n                <text\n                  key={'text' + i}\n                  x={projection(d.coordinates)[0] + 10}\n                  y={projection(d.coordinates)[1]}\n                  className='g-city-label'\n                  >{d.city}\n                </text>\n              </g>\n            )\n          })\n\n        }\n\n\n\n\n      return (\n        <div className='g-pod-chart' ref={el => (this.container = el)}>\n        <div className='g-pod-toggle-group'>\n          <div className='g-pod-toggle'>\n            <button className={this.state.metric === 'cases' ? 'active' : ''} data-metric='cases' onClick={this.handleClick}>Cases</button>\n            <button className={this.state.metric === 'deaths' ? 'active' : ''} data-metric='deaths' onClick={this.handleClick}>Deaths</button>\n          </div>\n          <div className='g-pod-toggle'>\n            <button className={this.state.method === 'total' ? 'active' : ''} data-method='total' onClick={this.handleClick}>Total</button>\n            <button className={this.state.method === 'rate' ? 'active' : ''} data-method='rate' onClick={this.handleClick}>Per 10k people</button>\n          </div>\n        </div>\n        <div className='g-pod-chart-label'>\n          <h4>{this.state.metric === 'cases' ? 'Confirmed cases' : 'Deaths'} {this.state.method === 'total' ? '' : ' per 10k people'}</h4>\n          <div className='g-pod-chart-legend scale'>\n            <div className='g-pod-chart-legend-item'><div className='g-pod-chart-legend-item-symbol' style={{backgroundColor: '#dddddd'}}></div><div>No data</div></div>\n            {getColor && (getColor.range().map(function(d){\n              return(<div className='g-pod-chart-legend-item'><div className='g-pod-chart-legend-item-symbol' style={{backgroundColor: getColor(getColor.invertExtent(d)[0])}}></div><div>{format(\".2s\")(getColor.invertExtent(d)[0])}</div></div>)\n            }))\n            }\n          </div>\n        </div>\n          {dimensions && (\n            <svg width={dimensions.width} height={mapHeight} ref={node => this.node = node}>\n              <g>{zips}</g>\n              <g>{cities}</g>\n            </svg>\n          )}\n        </div>\n        )\n   }\n}\n\nexport default ZipMap\n","import React, {useState, useEffect} from 'react'\nlet zipCities = require('../../data/delaware_zip_cities.json')\nrequire('../../scss/components/ZipTable.scss')\nexport default function ZipTable(props) {\n\n  let mapHeight = 670\n\n  const [filter, setFilter] = useState(undefined)\n  const [showAll, setShowAll] = useState(undefined)\n  const [clicked, setClicked] = useState(false)\n\n  const onInput = (e, handler) => e.target.value.length ? setFilter(e.target.value) : setFilter(undefined)\n\nuseEffect(() => {\n  (props.dimensions.width > 500) ? setShowAll(true) : !clicked && setShowAll(false)\n})\n\nuseEffect(() => {\n  setShowAll(true)\n}, [clicked])\n\n  let { data } = props\n  data = JSON.parse(JSON.stringify(data))\n  data.map(d => d.city = zipCities.filter(z => z.zip === d.zip)[0].city)\n\n  return (\n    <div className='g-pod-chart'>\n      <input className='g-search' type=\"text\" placeholder=\"Search by ZIP code or city...\" onChange={e => onInput(e)} />\n      <div className='g-y-scroll-table-wrapper' style={{height: mapHeight}}>\n        <table>\n          <thead>\n            <tr className='g-row'>\n              <th className='g-cell g-name'>Location</th>\n              <th className='g-cell'>Cases</th>\n              <th className='g-cell g-cell-subdued g-cell-divide'>Per 10k</th>\n              <th className='g-cell'>Deaths</th>\n              <th className='g-cell g-cell-subdued'>Per 10k</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data\n              .filter(d => filter ? (String(d.zip).includes(filter) || String(d.city).toLowerCase().includes(filter.toLowerCase())) : d )\n              .filter((d, i) => showAll ? d : i < 10)\n              .map(d => {\n              return(\n                <tr className='g-row'>\n                  <td className='g-cell g-name'>\n                    {d.zip}\n                    <div className='g-cell-city'>{d.city}</div>\n                  </td>\n                  <td className='g-cell'>{d.cases ? d.cases.toLocaleString() : '-'}</td>\n                  <td className='g-cell g-cell-subdued g-cell-divide'>{d.casesPer10k ? d.casesPer10k.toLocaleString() : '-'}</td>\n                  <td className='g-cell'>{d.deaths ? d.deaths.toLocaleString() : '-'}</td>\n                  <td className='g-cell g-cell-subdued'>{d.deathsPer10k ? d.deathsPer10k.toLocaleString() : '-'}</td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n        {(!showAll && !clicked)\n        ? <button className='g-standalone-button' onClick={() => {\n          setClicked(true)\n        }}\n        >Show all</button>\n      : ''}\n      </div>\n    </div>\n  )\n}\n","const parseDate = (input, format) => {\n  format = format || 'yyyy-mm-dd'; // default format\n  var parts = input.match(/(\\d+)/g),\n    i = 0,\n    fmt = {};\n  // extract date-part indexes from the format\n  format.replace(/(yyyy|dd|mm)/g, function(part) {\n    fmt[part] = i++;\n  });\n\n  return new Date(parts[fmt['yyyy']], parts[fmt['mm']] - 1, parts[fmt['dd']]);\n}\n\nexport default parseDate\n","import parseDate from './parseDate.js'\n\nconst formatJson = objects => {\n  for (var i = 0; i < objects.length; i++) {\n    var obj = objects[i];\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop) && obj[prop] !== null && !isNaN(obj[prop])) {\n        obj[prop] = +obj[prop];\n      } else if (obj[prop] === 'NA') {\n        obj[prop] = null\n      } else if (obj.hasOwnProperty(prop) && obj[prop] !== null && prop === 'date_confirmed') {\n        obj[prop] = parseDate(obj[prop])\n      }\n    }\n  }\n}\n\nexport default formatJson\n","export default function makeid(length) {\n   var result           = '';\n   var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n   var charactersLength = characters.length;\n   for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n}\n","import getAverage from './getAverage.js'\nexport default function getWeekAverage(data, property) {\n  let weekOfData = data.slice(Math.max(data.length - 7, 0))\n  let changesArr = []\n  weekOfData.map((d, i) => {\n    let y = i ? weekOfData[i - 1] : null\n    let change = y ? d[property] - y[property] : d[property]\n    i && changesArr.push(change)\n  })\n\n  return `<span class='${`g-inline-span ${property.split('_')[1]}'`}>${getAverage(changesArr).toLocaleString(undefined,{'minimumFractionDigits':0,'maximumFractionDigits':0})}</span>`\n}\n","export default function getNth(data, property, n = 1) {\n  return `<span class='${`g-inline-span ${property.split('_')[1]}'`}>${data[data.length-n][property].toLocaleString()}</span>`\n}\n","import React, {\n  useState,\n  useEffect,\n  useRef\n} from 'react';\nimport * as d3 from 'd3'\nimport '../scss/App.scss';\n\nimport Loader from \"./components//Loader.js\"\nimport Dashboard from \"./components/Dashboard.js\"\nimport Intro from './components/Intro.js'\nimport Navigation from './components/Navigation.js'\nimport Pod from './components/Pod.js'\n\n// Charts\nimport LineChart from \"./charts/LineChart.js\"\nimport BarChart from \"./charts/BarChart.js\"\nimport CountySection from './charts/CountySection.js'\nimport ZipMap from './charts/ZipMap.js'\nimport ZipTable from './charts/ZipTable.js'\n\nimport getGsxProp from './util/getGsxProp.js'\nimport formatJson from './util/formatJson.js'\nimport makeid from './util/makeId.js'\nimport getWeekAverage from './util/getWeekAverage.js'\nimport getNth from './util/getNth.js'\nimport getPositivityRate from './util/getPositivityRate.js'\n\n\nfunction debounce(fn, ms) {\n  let timer\n  return _ => {\n    clearTimeout(timer)\n    timer = setTimeout(_ => {\n      timer = null\n      fn.apply(this, arguments)\n    }, ms)\n  };\n}\n\n\nfunction App() {\n\n  const [data, setData] = useState(undefined)\n\n  const [dimensions, setDimensions] = React.useState({\n    width: window.innerWidth\n  })\n\n  useEffect(() => {\n\n\n\n    const debouncedHandleResize = debounce(function handleResize() {\n\n      if (dimensions.width !== window.innerWidth) {\n            console.log(window.innerWidth)\n            setDimensions({\n              width: window.innerWidth\n            })\n      }\n\n    }, 1000)\n\n    window.addEventListener('resize', debouncedHandleResize)\n\n    return _ => {\n      window.removeEventListener('resize', debouncedHandleResize)\n    }\n  })\n\n\n  useEffect(() => {\n\n    Promise.all([\n        d3.csv(\"https://www.gannett-cdn.com/delaware-online/storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-cases-data.csv?\" + makeid(100)),\n        d3.csv(\"https://www.gannett-cdn.com/delaware-online/storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-hospitalization-data.csv?\" + makeid(100)),\n        d3.csv(\"https://www.gannett-cdn.com/delaware-online/storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data-3.csv?\" + makeid(100)),\n        d3.csv(\"https://www.gannett-cdn.com/delaware-online/storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-zip-code-case-data.csv?\" + makeid(100)),\n    ]).then(function(files) {\n        files.map(f => formatJson(f))\n        files.map(f => f.sort((a, b) => a.date_confirmed.getTime() - b.date_confirmed.getTime()))\n        console.log(files[1])\n        setData({\n          cases: files[0],\n          hospitalizations: files[1],\n          vaccinations: files[2].filter(d => d.date_confirmed >= new Date('2020-12-01')),\n          zipData: files[3]\n        })\n    }).catch(function(err) {\n        // handle error here\n    })\n    // document.querySelector('.topper__timestamp').innerHTML = 'test'\n  }, [])\n\nconsole.log(data)\n\n  return ( <div className = \"App\" > {\n      data ?\n      <>\n        <Dashboard data={data}/>\n        <Intro />\n\n        <div className=\"g-main-container\">\n\n          <Navigation />\n\n          <Pod\n            id='cases-and-deaths'\n            heading='Cases and deaths'\n            chatter={`Over the past week, there have been an average of ${getWeekAverage(data.cases, 'delaware_cases')} new cases and ${getWeekAverage(data.cases, 'delaware_deaths')} deaths each day in Delaware. In total, there have been ${getNth(data.cases, 'delaware_cases')} cases and ${getNth(data.cases, 'delaware_deaths')} deaths.`}\n            toggle={[{filter: 'daily', title: 'daily'}, {filter: 'total', title: 'total'}]}\n            defaultToggle='daily'\n            source='<a target=\"_blank\" href=\"https://myhealthycommunity.dhss.delaware.gov/locations/state\">Delaware Division of Public Health</a>'\n            >\n            <LineChart class='cases' label='Cases' data={data.cases} filter='total' yAccessor='delaware_cases' legend={[{line: 'Total cases'}]}/>\n            <LineChart class='deaths' label='Deaths' data={data.cases} filter='total' yAccessor='delaware_deaths' legend={[{line: 'Total deaths'}]} />\n            <BarChart class='cases' label='Cases' data={data.cases} filter='daily' yAccessor='delaware_cases' legend={[{square: 'Daily cases'}, {line: '7-day average'}]}/>\n            <BarChart class='deaths' label='Deaths' data={data.cases} filter='daily' yAccessor='delaware_deaths' legend={[{square: 'Daily deaths'}, {line: '7-day average'}]}/>\n          </Pod>\n\n\n          {/*<Pod\n            id='testing'\n            heading='Testing'\n            chatter={`Over the past week, Delaware reported an average of ${getWeekAverage(data.cases, 'delaware_tests')} new test results each day and an average positivity rate of <span class='g-inline-span tests'>${getPositivityRate(data.cases, 'delaware').toFixed(1)}%</span>. In total, there have been ${getNth(data.cases, 'delaware_tests')} reported tests. Percent of tests that are positive indicates the total number of specimens tested, including when an individual is tested more than once.`}\n            source='<a target=\"_blank\" href=\"https://myhealthycommunity.dhss.delaware.gov/locations/state\">Delaware Division of Public Health</a>'\n            >\n            <BarChart class='testing' label='Tests per day' data={data.cases} yAccessor='delaware_tests' legend={[{square: 'Daily tests'}, {line: '7-day average'}]}/>\n            <LineChart class='testing' label='Positivity rate' data={data.cases} yAccessor='delaware_positivityRate' legend={[{line: '7-day average'}]}/>\n          </Pod>*/}\n\n          <Pod\n            id='hospitalizations'\n            heading='Hospitalizations'\n            chatter={`There are currently ${getNth(data.hospitalizations, 'delaware_hospitalized')} people hospitalized due to the coronavirus in Delaware.`}\n            source='<a target=\"_blank\" href=\"https://myhealthycommunity.dhss.delaware.gov/locations/state\">Delaware Division of Public Health</a>'\n            >\n            <LineChart class='hospitalizations' label=' '  data={data.hospitalizations} yAccessor='delaware_hospitalized' legend={[{line: 'Current hospitalizations'}]}/>\n          </Pod>\n\n\n\n          <Pod\n            id='vaccinations'\n            heading='Vaccinations'\n            chatter={`In total, ${getNth(data.vaccinations, 'vaccinated')} people have been fully vaccinated in Delaware.`}\n            source='<a target=\"_blank\" href=\"https://myhealthycommunity.dhss.delaware.gov/locations/state\">Delaware Division of Public Health</a>'\n            >\n            <BarChart class='vaccinations' label='People fully vaccinated daily' data={data.vaccinations} filter='daily' yAccessor='vaccinated' legend={[{square: 'People fully vaccinated daily'}, {line: '7-day average'}]}/>\n            <LineChart class='vaccinations' label='Total people fully vaccinated' data={data.vaccinations} yAccessor='vaccinated' legend={[{line: 'Total people fully vaccinated'}]}/>\n          </Pod>\n\n          <Pod\n            id='county-data'\n            heading='Infection numbers and deaths by county'\n            source='<a target=\"_blank\" href=\"https://myhealthycommunity.dhss.delaware.gov/locations/state\">Delaware Division of Public Health</a>; U.S. Census Bureau'\n            >\n            <CountySection data={data.cases} />\n          </Pod>\n\n          <Pod\n            id='zip-code-data'\n            heading='Infection rate by ZIP code'\n            chatter='In order to protect privacy, the state only releases case and death data for locations where the number of cases is ten or more. As a result, ZIP codes with no available data may have cases not shown.'\n            source='<a target=\"_blank\" href=\"https://myhealthycommunity.dhss.delaware.gov/locations/state\">Delaware Division of Public Health</a>'\n            >\n            <ZipMap data={data.zipData}/>\n            <ZipTable data={data.zipData} dimensions={dimensions}/>\n          </Pod>\n\n        </div>\n      </>\n      : <Loader/>\n    } </div>\n  );\n}\n\nexport default App;\n\n\n// chatter={`Over the past week, an average of ${getWeekAverage(data.vaccinations, 'vaccinated')} doses of the coronavirus vaccine were were administered daily in Delaware. In total, ${getNth(data.vaccinations, 'delaware_delivered')} doses have been delivered and ${getNth(data.vaccinations, 'vaccinated')} doses have been administered.`}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}