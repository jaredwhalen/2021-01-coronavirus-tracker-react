"1/9/21",               53650,                  25947,
"1/10/21",               53650,                  26878,
"1/11/21",               53650,                  26928,
"1/12/21",               58950,                  28316,
"1/13/21",               75050,                  33855,
"1/14/21",               77600,                  36082,
"1/15/21",               77600,                  37932,
"1/16/21",               77600,                  40352,
"1/17/21",               77600,                  42819,
"1/18/21",               77600,                  45385,
"1/19/21",               77600,                  46141
) %>%
mutate(
date_confirmed = as.Date(date_confirmed, format='%m/%d/%y')
)
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data.csv'
location
gcs_upload(vac_temp, name=location)
library(googleCloudStorageR)
gcs_upload(vac_temp, name=location)
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
View(vaccinations__old)
View(vaccinations__new)
View(vaccinations__old)
(vaccinations__new$date_confirmed > tail(vaccinations__old, 1)$date_confirmed)
vaccinations__updated <- bind_rows(vaccinations__old, vaccinations__new)
View(vaccinations__updated)
checkForVaccinationUpdate = function() {
source("getVaccinations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data.csv'
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
if (vaccinations__new$date_confirmed > tail(vaccinations__old, 1)$date_confirmed) {
print('update')
vaccinations__updated <- bind_rows(vaccinations__old, vaccinations__new)
# gcs_upload(vaccinations__updated, name=location)
# request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
# system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
checkForVaccinationUpdate()
checkForVaccinationUpdate = function() {
source("getVaccinations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data.csv'
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
if (vaccinations__new$date_confirmed > tail(vaccinations__old, 1)$date_confirmed) {
print('update')
vaccinations__updated <- bind_rows(vaccinations__old, vaccinations__new)
# gcs_upload(vaccinations__updated, name=location)
# request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
# system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
checkForVaccinationUpdate()
source("getVaccinations.R")
checkForVaccinationUpdate = function() {
source("getVaccinations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data.csv'
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
if (vaccinations__new$date_confirmed > tail(vaccinations__old, 1)$date_confirmed) {
print('update')
vaccinations__updated <- bind_rows(vaccinations__old, vaccinations__new)
# gcs_upload(vaccinations__updated, name=location)
# request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
# system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
checkForVaccinationUpdate()
checkForVaccinationUpdate = function() {
source("getVaccinations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data.csv'
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
if (vaccinations__new$date_confirmed > tail(vaccinations__old, 1)$date_confirmed) {
print('update')
vaccinations__updated <- bind_rows(vaccinations__old, vaccinations__new)
gcs_upload(vaccinations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
checkForVaccinationUpdate()
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data.csv'
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
View(vaccinations__old)
source('~/Documents/GitHub/2021-01-coronavirus-tracker-react/R/processBulkDownload.R')
source("getCases.R")
source("getCases.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-cases-data.csv'
View(cases__new)
gcs_upload(cases__new, name=location)
updateCaseData = function() {
source("getCases.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-cases-data.csv'
gcs_upload(cases__new, name=location)
rm(location)
}
updateCaseData = function() {
source("getCases.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-cases-data.csv'
gcs_upload(cases__new, name=location)
rm(location)
}
checkForHospitalizationUpdate = function() {
source("getHospitalizations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-hospitalization-data.csv'
hospitalizations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_hospitalized) %>%
mutate(date_confirmed = as.Date(date_confirmed), delaware_hospitalized = as.numeric(delaware_hospitalized)) %>%
arrange(date_confirmed)
if (hospitalizations__new$date_confirmed > tail(hospitalizations__old, 1)$date_confirmed) {
print('update')
hospitalizations__updated <- bind_rows(hospitalizations__old, hospitalizations__new)
gcs_upload(hospitalizations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
checkForVaccinationUpdate = function() {
source("getVaccinations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data.csv'
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
if (vaccinations__new$date_confirmed > tail(vaccinations__old, 1)$date_confirmed) {
print('update')
vaccinations__updated <- bind_rows(vaccinations__old, vaccinations__new)
gcs_upload(vaccinations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
updateCaseData()
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-cases-data.csv'
t <- gcs_get_object(location)
View(t)
checkForHospitalizationUpdate()
library(googleCloudStorageR)
updateCaseData = function() {
source("getCases.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-cases-data.csv'
gcs_upload(cases__new, name=location)
rm(location)
}
checkForHospitalizationUpdate = function() {
source("getHospitalizations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-hospitalization-data.csv'
hospitalizations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_hospitalized) %>%
mutate(date_confirmed = as.Date(date_confirmed), delaware_hospitalized = as.numeric(delaware_hospitalized)) %>%
arrange(date_confirmed)
if (hospitalizations__new$date_confirmed > tail(hospitalizations__old, 1)$date_confirmed) {
print('update')
hospitalizations__updated <- bind_rows(hospitalizations__old, hospitalizations__new)
gcs_upload(hospitalizations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
checkForVaccinationUpdate = function() {
source("getVaccinations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data.csv'
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
if (vaccinations__new$date_confirmed > tail(vaccinations__old, 1)$date_confirmed) {
print('update')
vaccinations__updated <- bind_rows(vaccinations__old, vaccinations__new)
gcs_upload(vaccinations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
updateCaseData()
checkForHospitalizationUpdate()
checkForVaccinationUpdate()
updateCaseData = function() {
source("getCases.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-cases-data.csv'
gcs_upload(cases__new, name=location)
rm(location)
}
checkForHospitalizationUpdate = function() {
source("getHospitalizations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-hospitalization-data.csv'
hospitalizations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_hospitalized) %>%
mutate(date_confirmed = as.Date(date_confirmed), delaware_hospitalized = as.numeric(delaware_hospitalized)) %>%
arrange(date_confirmed)
if (hospitalizations__new$date_confirmed > tail(hospitalizations__old, 1)$date_confirmed) {
print('update')
hospitalizations__updated <- bind_rows(hospitalizations__old, hospitalizations__new)
gcs_upload(hospitalizations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
checkForVaccinationUpdate = function() {
source("getVaccinations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data.csv'
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
if (vaccinations__new$date_confirmed > tail(vaccinations__old, 1)$date_confirmed) {
print('update')
vaccinations__updated <- bind_rows(vaccinations__old, vaccinations__new)
gcs_upload(vaccinations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
updateCaseData()
checkForHospitalizationUpdate()
checkForHospitalizationUpdate = function() {
source("getHospitalizations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-hospitalization-data.csv'
hospitalizations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_hospitalized) %>%
mutate(date_confirmed = as.Date(date_confirmed), delaware_hospitalized = as.numeric(delaware_hospitalized)) %>%
arrange(date_confirmed)
if (hospitalizations__new$date_confirmed > tail(hospitalizations__old, 1)$date_confirmed) {
print('update')
hospitalizations__updated <- bind_rows(hospitalizations__old, hospitalizations__new)
gcs_upload(hospitalizations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
checkForVaccinationUpdate = function() {
source("getVaccinations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data.csv'
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
if (vaccinations__new$date_confirmed > tail(vaccinations__old, 1)$date_confirmed) {
print('update')
vaccinations__updated <- bind_rows(vaccinations__old, vaccinations__new)
gcs_upload(vaccinations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
rm(list=setdiff(ls(), c("cases__new", "updateCaseData", "checkForHospitalizationUpdatem", "checkForVaccinationUpdate" )) )
library(googleCloudStorageR)
updateCaseData = function() {
source("getCases.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-cases-data.csv'
gcs_upload(cases__new, name=location)
rm(location)
}
checkForHospitalizationUpdate = function() {
source("getHospitalizations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-hospitalization-data.csv'
hospitalizations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_hospitalized) %>%
mutate(date_confirmed = as.Date(date_confirmed), delaware_hospitalized = as.numeric(delaware_hospitalized)) %>%
arrange(date_confirmed)
if (hospitalizations__new$date_confirmed > tail(hospitalizations__old, 1)$date_confirmed) {
print('update')
hospitalizations__updated <- bind_rows(hospitalizations__old, hospitalizations__new)
gcs_upload(hospitalizations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
checkForVaccinationUpdate = function() {
source("getVaccinations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data.csv'
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
if (vaccinations__new$date_confirmed > tail(vaccinations__old, 1)$date_confirmed) {
print('update')
vaccinations__updated <- bind_rows(vaccinations__old, vaccinations__new)
gcs_upload(vaccinations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
updateCaseData()
checkForHospitalizationUpdate()
checkForVaccinationUpdate()
library(googleCloudStorageR)
updateCaseData = function() {
source("getCases.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-cases-data.csv'
gcs_upload(cases__new, name=location)
rm(location)
}
checkForHospitalizationUpdate = function() {
source("getHospitalizations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-hospitalization-data.csv'
hospitalizations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_hospitalized) %>%
mutate(date_confirmed = as.Date(date_confirmed), delaware_hospitalized = as.numeric(delaware_hospitalized)) %>%
arrange(date_confirmed)
if (hospitalizations__new$date_confirmed > tail(hospitalizations__old, 1)$date_confirmed) {
print('update')
hospitalizations__updated <- bind_rows(hospitalizations__old, hospitalizations__new)
gcs_upload(hospitalizations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
checkForVaccinationUpdate = function() {
source("getVaccinations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data.csv'
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
if (vaccinations__new$date_confirmed > tail(vaccinations__old, 1)$date_confirmed) {
print('update')
vaccinations__updated <- bind_rows(vaccinations__old, vaccinations__new)
gcs_upload(vaccinations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
updateCaseData()
checkForHospitalizationUpdate()
checkForVaccinationUpdate()
library(googleCloudStorageR)
updateCaseData = function() {
source("getCases.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-cases-data.csv'
gcs_upload(cases__new, name=location)
rm(location)
}
checkForHospitalizationUpdate = function() {
source("getHospitalizations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-hospitalization-data.csv'
hospitalizations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_hospitalized) %>%
mutate(date_confirmed = as.Date(date_confirmed), delaware_hospitalized = as.numeric(delaware_hospitalized)) %>%
arrange(date_confirmed)
if (hospitalizations__new$date_confirmed > tail(hospitalizations__old, 1)$date_confirmed) {
print('update')
hospitalizations__updated <- bind_rows(hospitalizations__old, hospitalizations__new)
gcs_upload(hospitalizations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
checkForVaccinationUpdate = function() {
source("getVaccinations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data.csv'
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
if (vaccinations__new$date_confirmed > tail(vaccinations__old, 1)$date_confirmed) {
print('update')
vaccinations__updated <- bind_rows(vaccinations__old, vaccinations__new)
gcs_upload(vaccinations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
updateCaseData()
checkForHospitalizationUpdate()
checkForVaccinationUpdate()
library(googleCloudStorageR)
updateCaseData = function() {
source("getCases.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-cases-data.csv'
gcs_upload(cases__new, name=location)
rm(location)
}
checkForHospitalizationUpdate = function() {
source("getHospitalizations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-hospitalization-data.csv'
hospitalizations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_hospitalized) %>%
mutate(date_confirmed = as.Date(date_confirmed), delaware_hospitalized = as.numeric(delaware_hospitalized)) %>%
arrange(date_confirmed)
if (hospitalizations__new$date_confirmed > tail(hospitalizations__old, 1)$date_confirmed) {
print('update')
hospitalizations__updated <- bind_rows(hospitalizations__old, hospitalizations__new)
gcs_upload(hospitalizations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
checkForVaccinationUpdate = function() {
source("getVaccinations.R")
location <- 'storytelling-embeds/master/projects/2021-01-coronavirus-tracker-react/data/delaware-vaccination-data.csv'
vaccinations__old <- gcs_get_object(location) %>%
select(date_confirmed, delaware_delivered, delaware_administered) %>%
mutate(date_confirmed = as.Date(date_confirmed),
delaware_delivered = as.numeric(delaware_delivered),
delaware_administered = as.numeric(delaware_administered),
) %>%
arrange(date_confirmed)
if (vaccinations__new$date_confirmed > tail(vaccinations__old, 1)$date_confirmed) {
print('update')
vaccinations__updated <- bind_rows(vaccinations__old, vaccinations__new)
gcs_upload(vaccinations__updated, name=location)
request = paste("https://", Sys.getenv("CDN_CURL_AUTH"), "@www.gannett-cdn.com/delaware-online/", location, sep="")
system(paste('curl -X PURGE "', request, '" -m 10 &', sep='') , TRUE)
} else {
print('no update')
}
}
updateCaseData()
checkForHospitalizationUpdate()
checkForVaccinationUpdate()
